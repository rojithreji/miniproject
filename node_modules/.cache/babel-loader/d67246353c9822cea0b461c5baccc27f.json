{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../../assets/styles/ChangePassword.css';\nimport Popup from '../../components/common/Popup';\n\nconst ChangePassword = () => {\n  _s();\n\n  const password = window.localStorage.getItem('password');\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const history = useHistory();\n\n  const passwordUpdateHandler = () => {\n    if (newPassword === \"\" || currentPassword === \"\" || confirmPassword === \"\") {\n      setError(...error, \"Password cannot be blank !!\");\n      setStrength(\"blank\");\n    } else if (newPassword === confirmPassword) {\n      if (currentPassword === password) {\n        setSuccess(true);\n        window.localStorage.setItem('password', newPassword);\n      } else {\n        setError(...error, \"Enter correct password !!\");\n        setStrength('blank');\n        setNewPassword(\"\");\n      }\n    } else {\n      setError(...error, \"Password Does'nt Match !!\");\n      setStrength('blank');\n      setNewPassword(\"\");\n    }\n\n    setNewPassword('');\n  };\n\n  const [length, setLength] = useState(false);\n  const [alphacaps, setAlphaCaps] = useState(false);\n  const [alphasmall, setAlphaSmall] = useState(false);\n  const [numeric, setNumeric] = useState(false);\n  const [spchar, setSpchar] = useState(false);\n  const [strength, setStrength] = useState(\"blank\");\n  const [strengthScore, setStrengthScore] = useState(0);\n\n  const passwordStrengthHandler = () => {\n    setStrength(false);\n\n    if (!length && newPassword.length >= 8) {\n      setLength(true);\n      setStrengthScore(strengthScore + 1);\n    }\n\n    for (let i = 0; i < newPassword.length; i++) {\n      let char = newPassword.charCodeAt(i);\n\n      if (!alphacaps && char >= 65 && char <= 90) {\n        setAlphaCaps(true);\n        setStrengthScore(strengthScore + 1);\n      }\n\n      if (!alphasmall && char >= 97 && char <= 122) {\n        setAlphaSmall(true);\n        setStrengthScore(strengthScore + 1);\n      }\n\n      if (!numeric && char >= 48 && char <= 57) {\n        setNumeric(true);\n        setStrengthScore(strengthScore + 1);\n      }\n\n      if (!spchar && (char >= 33 && char <= 47 || char >= 58 && char <= 64)) {\n        setSpchar(true);\n        setStrengthScore(strengthScore + 1);\n      }\n    }\n\n    if (strengthScore === 1) {\n      setStrength('Poor');\n    }\n\n    if (strengthScore === 2) {\n      setStrength('Medium');\n    }\n\n    if (strengthScore === 3) {\n      setStrength('Good');\n    }\n\n    if (length && strengthScore === 4) {\n      setStrength('Strong');\n    }\n  };\n\n  const successPopup = () => {\n    setSuccess(!success);\n    setCurrentPassword(\"\");\n    setNewPassword(\"\");\n    setConfirmPassword(\"\");\n    setStrength(\"blank\");\n  };\n\n  const ErrorPopup = () => {\n    setError(\"\");\n  };\n\n  const clear = () => {\n    setStrength('blank');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error !== \"\" ? /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"logout-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logout-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ErrorPopup,\n            className: \"button-logout\",\n            style: {\n              backgroundColor: \"red\"\n            },\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 24\n    }, this) : null, success ? /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"logout-message\",\n          children: \"Success :)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logout-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: history.goBack,\n            className: \"button-logout\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updatePassword\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updatePasswordContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updatePassword-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Current Password\",\n            required: true,\n            id: \"name\",\n            value: currentPassword,\n            onChange: e => setCurrentPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"New Password\",\n            required: true,\n            id: \"name\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            onKeyUp: passwordStrengthHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: strength,\n            children: strength === 'blank' ? \"\" : strength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            required: true,\n            id: \"name\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updatePassword-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttons\",\n            onClick: passwordUpdateHandler,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttons\",\n            onClick: history.goBack,\n            style: {\n              backgroundColor: \"red\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangePassword, \"CG9o8vt29bmJ3mB1fRCL7AbglR4=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/ChangePassword.js"],"names":["React","useState","useHistory","Popup","ChangePassword","password","window","localStorage","getItem","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","history","passwordUpdateHandler","setStrength","setItem","length","setLength","alphacaps","setAlphaCaps","alphasmall","setAlphaSmall","numeric","setNumeric","spchar","setSpchar","strength","strengthScore","setStrengthScore","passwordStrengthHandler","i","char","charCodeAt","successPopup","ErrorPopup","clear","backgroundColor","goBack","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {useHistory} from 'react-router-dom';\nimport '../../assets/styles/ChangePassword.css'\nimport Popup from '../../components/common/Popup'\n\nconst ChangePassword = () => {\n    const password = window.localStorage.getItem('password')\n    const [currentPassword,setCurrentPassword] = useState(\"\")\n    const [newPassword,setNewPassword] = useState(\"\")\n    const [confirmPassword,setConfirmPassword] = useState(\"\")\n    const [error,setError] =useState(\"\")\n    const [success,setSuccess]= useState(false)\n    const history = useHistory()\n    const passwordUpdateHandler = ()=>{\n        if(newPassword===\"\"||currentPassword===\"\"||confirmPassword===\"\"){\n            setError(...error,\"Password cannot be blank !!\")\n            setStrength(\"blank\")\n        }\n        else if(newPassword===confirmPassword){\n            if(currentPassword===password){\n                setSuccess(true)\n                window.localStorage.setItem('password',newPassword);\n                \n                \n            }\n            else{\n                setError(...error,\"Enter correct password !!\")\n                setStrength('blank')\n                setNewPassword(\"\")\n            }\n        }\n        else{\n            setError(...error,\"Password Does'nt Match !!\")\n            setStrength('blank')\n            setNewPassword(\"\")\n        }\n        setNewPassword('')\n    }\n  \n\n    const [length,setLength] = useState(false)\n    const [alphacaps,setAlphaCaps] = useState(false)\n    const [alphasmall,setAlphaSmall] = useState(false)\n    const [numeric,setNumeric] = useState(false)\n    const [spchar,setSpchar] = useState(false)\n    const [strength,setStrength] = useState(\"blank\")\n    const [strengthScore,setStrengthScore] = useState(0)\n    \n    \n   \n    const passwordStrengthHandler = ()=>{\n        setStrength(false)\n        \n      if(!length && newPassword.length>=8){setLength(true); setStrengthScore(strengthScore+1)}\n      \n        for(let i=0;i<newPassword.length;i++){\n            \n            let char = newPassword.charCodeAt(i)\n            if(!alphacaps && char >=65 && char <=90){\n                setAlphaCaps(true);\n                setStrengthScore(strengthScore+1)}\n            \n            if(!alphasmall && char >=97 && char <=122){\n                setAlphaSmall(true);\n                setStrengthScore(strengthScore+1)\n            }\n            if(!numeric && char >=48 && char <=57){\n                setNumeric(true);\n                setStrengthScore(strengthScore+1)\n            }\n            if(!spchar && ((char >=33 && char <=47) || (char >= 58 && char <= 64))){\n                setSpchar(true);\n                setStrengthScore(strengthScore+1)\n            }\n            \n        }\n            \n            if(strengthScore===1){setStrength('Poor')}\n            if(strengthScore===2){setStrength('Medium')}\n            if(strengthScore===3){setStrength('Good')}\n            if(length && strengthScore===4){setStrength('Strong')}\n                 \n    }\n    \n    const successPopup = ()=>{\n        setSuccess(!success)\n        setCurrentPassword(\"\")\n        setNewPassword(\"\")\n        setConfirmPassword(\"\")\n        setStrength(\"blank\")\n    }\n    const ErrorPopup = ()=>{\n        setError(\"\")\n    }\n    const clear = ()=>{\n        setStrength('blank') \n    }\n    return (\n        <>\n        {(error!==\"\")?(<Popup content={<>\n                        <b id='logout-message'>{error}</b> \n                         \n                        <div className='logout-buttons'>\n                            <button onClick={ErrorPopup} className='button-logout' style={{backgroundColor: \"red\"}}>OK</button>\n                        </div>\n                        \n                        </>}/>):null}\n        {(success)?(<Popup content={\n            <>\n             <b id='logout-message'>Success :)</b>          \n             <div className='logout-buttons'>\n                 <button onClick={history.goBack} className='button-logout'>Done</button>\n             </div>\n             </>\n        }/>):null\n        }                \n        <div className='updatePassword'>\n            <div className='updatePasswordContent'>\n                   <p className='p'>Change Password</p>\n                \n                    <div className='updatePassword-fields'>\n                        <input type='password' placeholder='Current Password' required id='name' value={currentPassword} onChange={(e)=>setCurrentPassword(e.target.value)}></input>\n                        <input type='password' placeholder='New Password' required id='name' value={newPassword} onChange={(e)=>setNewPassword(e.target.value)} onKeyUp={passwordStrengthHandler}></input>\n                            <div className={strength}>{(strength==='blank')?(\"\"):(strength)}</div>\n                        <input type='password' placeholder='Confirm Password' required id='name' value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></input>\n                    </div>\n                    <br/>\n\n                    <div className='updatePassword-buttons'>\n                                    <button type='submit' className='buttons' onClick={passwordUpdateHandler}>Update</button>\n                                    <button type='submit' className='buttons' onClick={history.goBack} style={{backgroundColor: \"red\"}}>Cancel</button> \n                    </div>\n \n            </div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default ChangePassword\n"]},"metadata":{},"sourceType":"module"}