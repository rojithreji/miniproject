{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/CreateMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../assets/styles/CreateMenu.css';\nimport { connect } from 'react-redux';\nimport Popup from '../common/Popup';\nimport * as constants from '../../utilities/Constants';\nimport { addPerson, updatePerson } from '../../state/Actions';\n\nconst CreateMenu = props => {\n  _s();\n\n  //Popup Message\n  let content = \"\";\n  const [formError, setFormError] = useState(\"\");\n  const [idError, setIDError] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }; //popup for success message\n\n\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const toggleSuccess = () => {\n    setIsSuccess(!isSuccess);\n  };\n\n  let [initialSavings, setInitialSavings] = useState(false);\n  let [initialRd, setInitialRd] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [priority, setPriority] = useState(\"0\");\n  let [savings, setSavings] = useState(\"No\");\n  let [rd, setRd] = useState(\"No\");\n\n  const rdHandler = () => {\n    setInitialRd(initialRd = !initialRd);\n    initialRd ? setRd(\"Yes\") : setRd(\"No\");\n    console.log(\"rddd\", rd);\n  };\n\n  const savingsHandler = () => {\n    setInitialSavings(initialSavings = !initialSavings);\n    initialSavings ? setSavings(\"Yes\") : setSavings(\"No\");\n    console.log(\"save\", initialSavings);\n  }; //Edit Section\n\n\n  const [isEdit, setIsEdit] = useState(false);\n  useEffect(() => {\n    props.item === undefined ? console.log('test test') : edittest();\n  }, [props.item]);\n  let duplicate_id = 0;\n\n  const submitHandler = error => {\n    idChecker(id);\n\n    if (name === \"\" || id === \"\" || gender === \"\" || priority === '0') {\n      setFormError(\"Enter All Fields\");\n      togglePopup();\n    } else if (duplicate_id === 0) {\n      let data = {\n        name,\n        id,\n        gender,\n        priority,\n        savings,\n        rd\n      };\n      isEdit ? props.updatePerson(data) : props.addPerson(data);\n      clearfield();\n      setFormError(\"\");\n      setIDError(\"\");\n      toggleSuccess();\n    }\n  };\n\n  const updateHandler = error => {\n    if (name === \"\" || id === \"\" || gender === \"\" || priority === '0') {\n      setFormError(\"Enter All Fields\");\n      togglePopup();\n    } else {\n      let data = {\n        name,\n        id,\n        gender,\n        priority,\n        savings,\n        rd\n      };\n      props.updatePerson(data);\n      props.editHandler();\n    }\n  };\n\n  const idChecker = c_id => {\n    props.personList.forEach(person => {\n      if (person.id === c_id) {\n        duplicate_id = 1;\n        setIDError(\"ID Already Taken\");\n        togglePopup();\n      }\n    });\n  };\n\n  const clearfield = () => {\n    setName(\"\");\n    setId(\"\");\n    setGender(\"\");\n    setPriority(\"\");\n    setSavings(\"\");\n    setRd(\"\");\n  };\n\n  const edittest = () => {\n    setIsEdit(true);\n    setName(props.item.name);\n    setId(props.item.id);\n    setGender(props.item.gender);\n    setPriority(props.item.priority);\n    setSavings(props.item.savings);\n    setRd(props.item.rd);\n  };\n\n  console.log(name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"logout-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              fontSize: '12px',\n              color: 'red'\n            },\n            children: idError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              fontSize: '12px'\n            },\n            children: formError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 105\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logout-buttons\",\n          onHover: togglePopup,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePopup,\n            className: \"button-logout\",\n            id: \"red\",\n            style: {\n              fontSize: '10px',\n              width: '70px',\n              height: '25px'\n            },\n            children: constants.CREATE_PAGE.ADD_PERSON_ERROR_BUTTON\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true),\n      handleClose: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 20\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"logout-message\",\n          children: constants.CREATE_PAGE.ADD_PERSON_SUCCESS_MESSAGE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logout-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleSuccess,\n            className: \"button-logout\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true),\n      handleClose: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createContent\",\n        children: [isEdit ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: \"Edit Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: constants.CREATE_PAGE.ADD_PERSON_HEADING\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 65\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            required: true,\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"ID\",\n            required: true,\n            min: \"1\",\n            id: \"id\",\n            value: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"ID\",\n            required: true,\n            min: \"1\",\n            id: \"id\",\n            value: id,\n            onChange: e => setId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 115\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"gender\",\n            children: [constants.CREATE_PAGE.ADD_PERSON_GENDER, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), gender === 'Male' ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio_label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"gender\",\n              className: \"check\",\n              id: \"male\",\n              value: \"Male\",\n              checked: true,\n              onChange: e => setGender('Male')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 72\n            }, this), \"Male\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 200\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio_label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"gender\",\n              className: \"check\",\n              id: \"male\",\n              value: \"Male\",\n              onChange: e => setGender('Male')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 255\n            }, this), \"Male\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 375\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 224\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), gender === 'Female' ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio_label radio2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"gender\",\n              checked: true,\n              className: \"check\",\n              id: \"female\",\n              value: \"Female\",\n              onChange: e => setGender('Female')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 81\n            }, this), \"Female\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 216\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio_label radio2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"gender\",\n              className: \"check\",\n              id: \"female\",\n              value: \"Female\",\n              onChange: e => setGender('Female')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 278\n            }, this), \"Female\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 405\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 240\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"priority\",\n              id: \"select\",\n              onChange: e => setPriority(e.target.value),\n              value: priority,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                default: true,\n                value: \"0\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Basic\",\n                children: \"Basic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Advanced\",\n                children: \"Advanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox\",\n            children: [savings == 'Yes' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"savings\",\n                name: \"savings\",\n                value: \"savings\",\n                checked: true,\n                onChange: () => setSavings(\"No\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 47\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"savings\",\n                children: \"Savings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 155\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"savings\",\n                name: \"savings\",\n                value: \"savings\",\n                onChange: () => setSavings(\"Yes\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 200\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"savings\",\n                children: \"Savings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 305\n              }, this)]\n            }, void 0, true), rd == 'Yes' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"rd\",\n                name: \"rd\",\n                value: \"rd\",\n                checked: true,\n                onChange: () => setRd('No')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"rd\",\n                children: \"RD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 129\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"rd\",\n                name: \"rd\",\n                value: \"rd\",\n                onChange: () => setRd('Yes')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 165\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"rd\",\n                children: \"RD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 246\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 22\n          }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"buttons\",\n              onClick: updateHandler,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/list\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"buttons\",\n                style: {\n                  backgroundColor: \"red\"\n                },\n                onClick: props.editHandler,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttons\",\n            onClick: submitHandler,\n            children: constants.CREATE_PAGE.ADD_PERSON_SUBMIT_BUTTON\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateMenu, \"WenQ5PrlaelhrLvlN+wJ2VJ4GoU=\");\n\n_c = CreateMenu;\n\nconst mapStatetoProps = ({\n  task1\n}) => {\n  return {\n    personList: task1.personList\n  };\n};\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    addPerson: data => {\n      dispatch(addPerson(data));\n    },\n    updatePerson: data => {\n      dispatch(updatePerson(data));\n    }\n  };\n  return {};\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(CreateMenu);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMenu\");","map":{"version":3,"sources":["/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/CreateMenu.js"],"names":["React","useState","Fragment","useEffect","Link","connect","Popup","constants","addPerson","updatePerson","CreateMenu","props","content","formError","setFormError","idError","setIDError","isOpen","setIsOpen","togglePopup","isSuccess","setIsSuccess","toggleSuccess","initialSavings","setInitialSavings","initialRd","setInitialRd","name","setName","id","setId","gender","setGender","priority","setPriority","savings","setSavings","rd","setRd","rdHandler","console","log","savingsHandler","isEdit","setIsEdit","item","undefined","edittest","duplicate_id","submitHandler","error","idChecker","data","clearfield","updateHandler","editHandler","c_id","personList","forEach","person","fontSize","color","width","height","CREATE_PAGE","ADD_PERSON_ERROR_BUTTON","ADD_PERSON_SUCCESS_MESSAGE","ADD_PERSON_HEADING","e","target","value","ADD_PERSON_GENDER","backgroundColor","ADD_PERSON_SUBMIT_BUTTON","mapStatetoProps","task1","mapDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState,Fragment, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport '../../assets/styles/CreateMenu.css'\nimport {connect} from 'react-redux';\nimport Popup from '../common/Popup'\nimport * as constants from '../../utilities/Constants'\nimport {addPerson,updatePerson} from '../../state/Actions'\n\n\n\nconst CreateMenu= (props)=> {\n    \n    \n    //Popup Message\n    let content = \"\"\n    const [formError,setFormError]=useState(\"\")\n    const [idError,setIDError]=useState(\"\")\n    const [isOpen,setIsOpen]=useState(false)\n    const togglePopup = ()=>{\n        setIsOpen(!isOpen)\n    }\n\n    //popup for success message\n    const [isSuccess,setIsSuccess]=useState(false)\n    const toggleSuccess = ()=>{\n        setIsSuccess(!isSuccess)\n    }\n   \n    let [initialSavings,setInitialSavings] = useState(false)\n    let [initialRd,setInitialRd] = useState(false)\n    const [name,setName]=useState(\"\")\n    const [id,setId]=useState(\"\")\n    const [gender, setGender]= useState(\"\")\n    const [priority,setPriority] = useState(\"0\")\n    let [savings,setSavings] = useState(\"No\")\n    let [rd,setRd] = useState(\"No\")\n\n    const rdHandler = ()=>{\n        setInitialRd(initialRd=!initialRd)\n        initialRd?setRd(\"Yes\"):setRd(\"No\")\n        console.log(\"rddd\",rd)\n    }\n    const savingsHandler = ()=>{\n        setInitialSavings(initialSavings=!initialSavings)\n        initialSavings?setSavings(\"Yes\"):setSavings(\"No\")\n        console.log(\"save\",initialSavings)\n    }\n    //Edit Section\n    const [isEdit,setIsEdit]= useState(false)\n\n    \n    \n    \n    useEffect(()=>{\n        (props.item===undefined)?(console.log('test test')):edittest()\n    },[props.item])\n    \n\n    let duplicate_id=0;\n   \n \n    const submitHandler =(error)=>{\n\n        idChecker(id)\n        if(name===\"\" || id===\"\" || gender===\"\" || priority==='0'){\n       \n           setFormError(\"Enter All Fields\");\n           togglePopup()\n       }\n       \n       else if(duplicate_id === 0){\n\n                let data={name,id,gender,priority,savings,rd}\n                isEdit?props.updatePerson(data):props.addPerson(data)\n                \n                clearfield()\n                setFormError(\"\")\n                setIDError(\"\")\n                toggleSuccess()\n       \n        }\n     }\n     const updateHandler =(error)=>{\n\n        if(name===\"\" || id===\"\" || gender===\"\" || priority==='0'){\n       \n           setFormError(\"Enter All Fields\");\n           togglePopup()\n       }\n       else{\n\n                let data={name,id,gender,priority,savings,rd}\n                props.updatePerson(data)\n                props.editHandler()\n       \n        }\n     }    \n\n    const idChecker = (c_id)=>{\n        props.personList.forEach(person=>{\n            if(person.id === c_id){\n                duplicate_id=1;\n                setIDError(\"ID Already Taken\")\n                togglePopup()\n                \n            }\n      })\n\n    }\n\n    const clearfield = ()=>{\n        setName(\"\")\n        setId(\"\")\n        setGender(\"\")\n        setPriority(\"\")\n        setSavings(\"\")\n        setRd(\"\")\n    }\n\nconst edittest = ()=>{\n    setIsEdit(true)\n    setName(props.item.name)\n    setId(props.item.id)\n    setGender(props.item.gender)\n    setPriority(props.item.priority)\n    setSavings(props.item.savings)\n    setRd(props.item.rd)\n}\n\n\nconsole.log(name)\n\n    return (\n        <>\n        {isOpen && <Popup\n                    content={<>\n                        <b id='logout-message'><li style={{fontSize:'12px', color:'red'}}>{idError}</li><li style={{fontSize:'12px'}}>{formError}</li></b> \n                         \n                        <div className='logout-buttons' onHover={togglePopup}>\n                    <button onClick={togglePopup} className='button-logout' id='red' style={{fontSize:'10px', width:'70px',height:'25px'}}>{constants.CREATE_PAGE.ADD_PERSON_ERROR_BUTTON}</button>\n                        </div>\n                        \n                        </>}\n                        handleClose={togglePopup}\n                />}\n        {isSuccess && <Popup\n                    content={<>\n                        <b id='logout-message'>{constants.CREATE_PAGE.ADD_PERSON_SUCCESS_MESSAGE}</b> \n                         \n                        <div className='logout-buttons'>\n                            <button onClick={toggleSuccess} className='button-logout'>Done</button>\n                        </div>\n                        \n                        </>}\n                        handleClose={togglePopup}\n                />}        \n        <div className='create'>\n            <div className='createContent'>\n                    {isEdit?(<p className='p'>Edit Person</p>):(<p className='p'>{constants.CREATE_PAGE.ADD_PERSON_HEADING}</p>)}\n                \n                    <div className='create-fields'>\n                    <input type='text' placeholder='Name' required id='name' value={name} onChange={(e)=>setName(e.target.value)}></input>\n                    {isEdit?(<input type='number' placeholder='ID' required min='1' id='id' value={id}></input>):(<input type='number' placeholder='ID' required min='1' id='id' value={id} onChange={(e)=>setId(e.target.value)}></input>)}\n                    <br/>\n\n                    <label className='gender'>{constants.CREATE_PAGE.ADD_PERSON_GENDER} </label>\n                    {(gender==='Male')?(<label className='radio_label'><input type='radio' name='gender' className='check' id='male' value='Male' checked onChange={e=>setGender('Male')} ></input>Male<span></span></label>):(<label className='radio_label'><input type='radio' name='gender' className='check' id='male' value='Male' onChange={e=>setGender('Male')} ></input>Male<span></span></label>)}\n                    <br></br>\n                    {(gender==='Female')?(<label className='radio_label radio2'><input type='radio' name='gender' checked className='check' id='female' value='Female' onChange={e=>setGender('Female')}></input>Female<span></span></label>):(<label className='radio_label radio2'><input type='radio' name='gender' className='check' id='female' value='Female' onChange={e=>setGender('Female')}></input>Female<span></span></label>)}\n                    \n                    <br/>\n                    <div className='select'>\n                        <select name='priority' id='select' onChange={e=>setPriority(e.target.value)} value={priority}>\n                            <option default value= '0'>Priority</option>\n                            <option value='Basic'>Basic</option>\n                            <option value='Advanced'>Advanced</option>\n                        </select>   \n                     </div>\n                     <div className='checkbox'>\n                        {(savings=='Yes')?(<> <input type=\"checkbox\" id=\"savings\"name=\"savings\" value=\"savings\" checked onChange={()=>setSavings(\"No\")}/> <label for=\"savings\">Savings</label></> ):(<><input type=\"checkbox\" id=\"savings\"    name=\"savings\" value=\"savings\" onChange={()=>setSavings(\"Yes\")} /><label for=\"savings\">Savings</label></>)}\n                    \n                    \n                        {(rd=='Yes')?(<><input type=\"checkbox\" id=\"rd\" name=\"rd\" value=\"rd\" checked onChange={()=>setRd('No')}/><label for=\"rd\"  >RD</label></>):(<><input type=\"checkbox\" id=\"rd\" name=\"rd\" value=\"rd\" onChange={()=>setRd('Yes')}/><label for=\"rd\" >RD</label></>)}\n                    </div>\n                \n                    {isEdit?(<div className='edit-buttons'>\n                                    <button type='submit' className='buttons' onClick={updateHandler}>Update</button>\n                                    <Link to='/list'><button type='submit' className='buttons' style={{backgroundColor: \"red\"}} onClick={props.editHandler}>Cancel</button></Link>\n                             </div>):\n                            (<button type='submit' className='buttons' onClick={submitHandler}>{constants.CREATE_PAGE.ADD_PERSON_SUBMIT_BUTTON}</button>)}\n                </div>\n                \n                \n            </div>\n            \n        </div>\n        </>\n    )\n}\n\n\nconst mapStatetoProps = ({task1})=>{\n    return {personList:task1.personList}\n}\n\nconst mapDispatchtoProps = (dispatch)=>{\n    return { addPerson : (data)=>{dispatch(addPerson(data))},\n            updatePerson : (data)=>{dispatch(updatePerson(data))}}\n    return { }\n}\n\nexport default connect(mapStatetoProps,mapDispatchtoProps)(CreateMenu)\n\n"]},"metadata":{},"sourceType":"module"}