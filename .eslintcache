[{"/Users/rojithreji/Documents/msil/miniproject/src/index.js":"1","/Users/rojithreji/Documents/msil/miniproject/src/reportWebVitals.js":"2","/Users/rojithreji/Documents/msil/miniproject/src/App.js":"3","/Users/rojithreji/Documents/msil/miniproject/src/state/store.js":"4","/Users/rojithreji/Documents/msil/miniproject/src/state/Reducer.js":"5","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/ChangePassword.js":"6","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/HomePageHeader.js":"7","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/ListMenu.js":"8","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/CreateMenu.js":"9","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/HomePageMenu.js":"10","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/Product.js":"11","/Users/rojithreji/Documents/msil/miniproject/src/components/prelogin/Login.js":"12","/Users/rojithreji/Documents/msil/miniproject/src/state/Actions.js":"13","/Users/rojithreji/Documents/msil/miniproject/src/components/common/PopupProduct.js":"14","/Users/rojithreji/Documents/msil/miniproject/src/components/common/Popup.js":"15","/Users/rojithreji/Documents/msil/miniproject/src/components/common/PopupList.js":"16","/Users/rojithreji/Documents/msil/miniproject/src/components/common/Spinner.js":"17","/Users/rojithreji/Documents/msil/miniproject/src/components/common/PopupLogin.js":"18","/Users/rojithreji/Documents/msil/miniproject/src/components/common/Input.js":"19","/Users/rojithreji/Documents/msil/miniproject/src/utilities/CommonMethods.js":"20","/Users/rojithreji/Documents/msil/miniproject/src/utilities/Constants.js":"21"},{"size":919,"mtime":1608529292115,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1606909848747,"results":"24","hashOfConfig":"23"},{"size":1748,"mtime":1608490465896,"results":"25","hashOfConfig":"23"},{"size":222,"mtime":1607570892772,"results":"26","hashOfConfig":"23"},{"size":1918,"mtime":1608275898939,"results":"27","hashOfConfig":"23"},{"size":5475,"mtime":1608490723081,"results":"28","hashOfConfig":"23"},{"size":3028,"mtime":1608299608572,"results":"29","hashOfConfig":"23"},{"size":8043,"mtime":1608298444025,"results":"30","hashOfConfig":"23"},{"size":8414,"mtime":1608320331613,"results":"31","hashOfConfig":"23"},{"size":952,"mtime":1608189645906,"results":"32","hashOfConfig":"23"},{"size":4537,"mtime":1608297435670,"results":"33","hashOfConfig":"23"},{"size":3352,"mtime":1608530455484,"results":"34","hashOfConfig":"23"},{"size":376,"mtime":1607579683041,"results":"35","hashOfConfig":"23"},{"size":269,"mtime":1608151079748,"results":"36","hashOfConfig":"23"},{"size":246,"mtime":1608150494770,"results":"37","hashOfConfig":"23"},{"size":266,"mtime":1608280743534,"results":"38","hashOfConfig":"23"},{"size":235,"mtime":1608191177607,"results":"39","hashOfConfig":"23"},{"size":271,"mtime":1608150545254,"results":"40","hashOfConfig":"23"},{"size":2102,"mtime":1607598096795,"results":"41","hashOfConfig":"23"},{"size":232,"mtime":1607597920851,"results":"42","hashOfConfig":"23"},{"size":1406,"mtime":1608295666075,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"omgzcr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/rojithreji/Documents/msil/miniproject/src/index.js",[],["95","96"],"/Users/rojithreji/Documents/msil/miniproject/src/reportWebVitals.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/App.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/state/store.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/state/Reducer.js",["97"],"import {ADD_PERSON,DELETE_PERSON,EDIT_PERSON} from './Actions';\n\nconst initialState ={personList : [{name:'Rojith',id:'1',gender:'Male',priority:'Advanced',savings:'Yes',rd:'No'},\n                                    {name:\"Nevin\", id:'2',gender:'Male',priority:'Advanced',savings:'No',rd:'No'},\n                                    {name:\"Roy\", id:'3',gender:'Male',priority:'Basic',savings:'No',rd:'Yes'},\n                                    {name:\"Riya\", id:'4',gender:'Female',priority:'Advanced',savings:'Yes',rd:'Yes'},\n                                    {name:\"Rakesh\", id:'5',gender:'Male',priority:'Basic',savings:'No',rd:'No'},\n                                    {name:\"Rahul\", id:'6',gender:'Female',priority:'Advanced',savings:'No',rd:'Yes'},\n                                    {name:\"Ranjith\", id:'7',gender:'Male',priority:'Basic',savings:'Yes',rd:'No'},]\n                    \n                   \n                    } \n\nlet slno = 0;\n\nconst reducer = (state=initialState, action)=>{\n    switch(action.type){\n        case ADD_PERSON:\n        {\n            \n            return{...state,personList:[...state.personList,action.payload]}\n        }\n        case DELETE_PERSON:\n            {\n                const deleted = state.personList.filter(person => person.id !== action.payload.id)\n                return {...state,personList:deleted} \n            }\n        case EDIT_PERSON:\n            {\n                return {\n                    ...state,\n                    personList: state.personList.map((content,i)=>\n                        content.id === action.payload.id ? {...content,name:action.payload.name,id:action.payload.id,gender:action.payload.gender,priority:action.payload.priority,savings:action.payload.savings,rd:action.payload.rd}:content\n                    )\n                }\n            \n            }    \n        default:\n            return state;\n    }\n}\n\n\n\nexport default reducer;","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/ChangePassword.js",["98","99"],"import React, { useState } from 'react'\nimport {useHistory} from 'react-router-dom';\nimport '../../assets/styles/ChangePassword.css'\nimport Popup from '../../components/common/Popup'\n\nconst ChangePassword = () => {\n    const password = window.localStorage.getItem('password')\n    const [currentPassword,setCurrentPassword] = useState(\"\")\n    const [newPassword,setNewPassword] = useState(\"\")\n    const [confirmPassword,setConfirmPassword] = useState(\"\")\n    const [error,setError] =useState(\"\")\n    const [success,setSuccess]= useState(false)\n    const history = useHistory()\n    const passwordUpdateHandler = ()=>{\n        if(newPassword===\"\"||currentPassword===\"\"||confirmPassword===\"\"){\n            setError(...error,\"Password cannot be blank !!\")\n            setStrength(\"blank\")\n        }\n        else if(newPassword===confirmPassword){\n            if(currentPassword===password){\n                setSuccess(true)\n                window.localStorage.setItem('password',newPassword);\n                \n                \n            }\n            else{\n                setError(...error,\"Enter correct password !!\")\n                setStrength('blank')\n                setNewPassword(\"\")\n            }\n        }\n        else{\n            setError(...error,\"Password Does'nt Match !!\")\n            setStrength('blank')\n            setNewPassword(\"\")\n        }\n        setNewPassword('')\n    }\n  \n\n    const [length,setLength] = useState(false)\n    const [alphacaps,setAlphaCaps] = useState(false)\n    const [alphasmall,setAlphaSmall] = useState(false)\n    const [numeric,setNumeric] = useState(false)\n    const [spchar,setSpchar] = useState(false)\n    const [strength,setStrength] = useState(\"blank\")\n    const [strengthScore,setStrengthScore] = useState(0)\n    \n    \n   \n    const passwordStrengthHandler = ()=>{\n        setStrength(false)\n        \n      if(!length && newPassword.length>=8){setLength(true); setStrengthScore(strengthScore+1)}\n      \n        for(let i=0;i<newPassword.length;i++){\n            \n            let char = newPassword.charCodeAt(i)\n            if(!alphacaps && char >=65 && char <=90){\n                setAlphaCaps(true);\n                setStrengthScore(strengthScore+1)}\n            \n            if(!alphasmall && char >=97 && char <=122){\n                setAlphaSmall(true);\n                setStrengthScore(strengthScore+1)\n            }\n            if(!numeric && char >=48 && char <=57){\n                setNumeric(true);\n                setStrengthScore(strengthScore+1)\n            }\n            if(!spchar && ((char >=33 && char <=47) || (char >= 58 && char <= 64))){\n                setSpchar(true);\n                setStrengthScore(strengthScore+1)\n            }\n            \n        }\n            \n            if(strengthScore===1){setStrength('Poor')}\n            if(strengthScore===2){setStrength('Medium')}\n            if(strengthScore===3){setStrength('Good')}\n            if(length && strengthScore===4){setStrength('Strong')}\n                 \n    }\n    \n    const successPopup = ()=>{\n        setSuccess(!success)\n        setCurrentPassword(\"\")\n        setNewPassword(\"\")\n        setConfirmPassword(\"\")\n        setStrength(\"blank\")\n    }\n    const ErrorPopup = ()=>{\n        setError(\"\")\n    }\n    const clear = ()=>{\n        setStrength('blank') \n    }\n    return (\n        <>\n        {(error!==\"\")?(<Popup content={<>\n                        <b id='logout-message'>{error}</b> \n                         \n                        <div className='logout-buttons'>\n                            <button onClick={ErrorPopup} className='button-logout' style={{backgroundColor: \"red\"}}>OK</button>\n                        </div>\n                        \n                        </>}/>):null}\n        {(success)?(<Popup content={\n            <>\n             <b id='logout-message'>Success :)</b>          \n             <div className='logout-buttons'>\n                 <button onClick={history.goBack} className='button-logout'>Done</button>\n             </div>\n             </>\n        }/>):null\n        }                \n        <div className='updatePassword'>\n            <div className='updatePasswordContent'>\n                   <p className='p'>Change Password</p>\n                \n                    <div className='updatePassword-fields'>\n                        <input type='password' placeholder='Current Password' required id='name' value={currentPassword} onChange={(e)=>setCurrentPassword(e.target.value)}></input>\n                        <input type='password' placeholder='New Password' required id='name' value={newPassword} onChange={(e)=>setNewPassword(e.target.value)} onKeyUp={passwordStrengthHandler}></input>\n                            <div className={strength}>{(strength==='blank')?(\"\"):(strength)}</div>\n                        <input type='password' placeholder='Confirm Password' required id='name' value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></input>\n                    </div>\n                    <br/>\n\n                    <div className='updatePassword-buttons'>\n                                    <button type='submit' className='buttons' onClick={passwordUpdateHandler}>Update</button>\n                                    <button type='submit' className='buttons' onClick={history.goBack} style={{backgroundColor: \"red\"}}>Cancel</button> \n                    </div>\n \n            </div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default ChangePassword\n","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/HomePageHeader.js",["100","101"],"import React,{useState} from 'react';\nimport {useHistory} from 'react-router-dom'\nimport '../../assets/styles/HomePageHeader.css'\nimport {Link} from 'react-router-dom'\nimport logo from '../../assets/images/logo.png';\nimport Popup from '../common/Popup';\nimport * as constants from '../../utilities/Constants'\n\nconst HomePageHeader = ({Logout})=> {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const history = useHistory()\n    const togglePopup = () => {\n      setIsOpen(!isOpen);\n    }\n\n    \n    const logoutHandler =(e)=>{\n        history.push(\"/\")\n    }\n\n    return (\n        <div className='header'>\n            <div className='header-left'>\n                <div className='header-image'><img src={logo}></img></div>\n            </div>\n            \n            <div className=\"header-right\">\n                <div className='header-text'>\n                    <p className='user-name'></p>\n                \n                    </div>  \n                \n                    <div class=\"dropdown\">\n                     <span class=\"dropbtn\">{window.sessionStorage.getItem('Username').toUpperCase()}</span><span className='arrow'>V</span> \n                        <div class=\"dropdown-content\">\n                            <a href=\"#\" onClick={togglePopup}>Logout</a>\n                            <Link to=\"/changepassword\">Change Password</Link>\n                        </div>\n                        \n                    </div>\n                    \n                    {isOpen && <Popup\n                        content={<>\n                            <b id='logout-message'>{constants.LOGOUT.LOGOUT_MESSAGE} </b>\n                            <div className='logout-buttons'>\n                                <button onClick={logoutHandler} className='button-logout' id='red'>{constants.LOGOUT.LOGOUT_CONFIRM}</button>\n                                <button onClick={togglePopup} className='button-logout'>{constants.LOGOUT.LOGOUT_CANCEL}</button>\n                            </div>\n                            \n                            </>}\n                            handleClose={togglePopup}\n                            />} \n                \n            </div>\n            \n            \n            \n            \n           \n            \n            \n        </div>\n    )\n}\n\nexport default HomePageHeader\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import '../styles/HomePageHeader.css'\n// import logo from '../assets/logo.png';\n// import Logout1 from './Logout';\n\n// const HomePageHeader = ({Logout,Name})=> {\n\n    \n    \n//     const logoutHandler =(e)=>{\n//         Logout();\n//     }\n\n\n//     return (\n//         <div id='header'>\n//             <div id='header-image'><img src={logo}></img></div>\n//             <div id='header-text'>\n//                 <p id='user-name'>{Name} </p>\n//             </div>\n//             <div>\n//                  <button id='logout' onClick={logoutHandler}>Logout</button>\n//             </div>\n            \n//         </div>\n//     )\n// }\n\n// export default HomePageHeader\n","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/ListMenu.js",["102","103","104","105","106","107","108","109","110","111","112"],"import React,{ useState, useCallback,useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport CreatePerson from './CreateMenu'\nimport '../../assets/styles/ListMenu.css'\nimport Popup from '../common/Popup';\nimport PopupList from '../common/PopupList';\nimport Input from '../common/Input';\nimport {useSelector,useDispatch,connect} from 'react-redux'\nimport * as actions from '../../state/Actions'\nimport * as constants from '../../utilities/Constants'\nimport {addPerson,deletePerson} from '../../state/Actions'\n\n\n\nconst ListMenu=(props)=> {\n    \n    const dispatch = useDispatch()\n    const [data,setData] = useState(props.personList)\n    console.log(\"FRom list menu\", data)\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchResult,setSearchResult] = useState(data)\n    const [search,setSearch]=useState(\"\")\n    const [clicked,setClicked] = useState(\"\")\n    const [isClicked,setIsClicked] = useState(false)\n\n    // Counter for assigning sl no\n    let i=1;\n    \n    // Fetching and setting delete id\n    let deleteid = -1;\n    let [deleteId,setDeleteId] = useState(deleteid)\n    let [name,setName] = useState(\"\")\n    \n    // Fetching and passing edit data\n    \n    let editable = false;\n    let editno=-1;\n    let [editID,setEditId] = useState(editno)\n    let [editList,setEditList] = useState(editable)\n    \n    \n    const togglePopup = (id,name) => {\n  \n        setDeleteId(id)\n        setIsOpen(!isOpen);\n        setName(name)\n        \n    }\n    useEffect(()=>{\n        setSearchResult(props.personList.filter(itm=>(itm.name.toLowerCase().includes(search.toLowerCase()))||(itm.gender.toLowerCase()===search.toLowerCase())||(itm.priority.toLowerCase().includes(search.toLowerCase()))))\n    },[search,data,props.personList])\n    \n    const deleteHandler = (deleteId) =>{\n       \n            props.deletePerson(deleteId)\n            togglePopup()\n    }\n\n    \n    const editHandler =(id,key)=>{\n        editList=!editList   \n        setEditList(editList)\n        setEditId(id)\n        console.log()\n\n        console.log(editList)\n\n    }\n    const clickHandler=(item)=>{\n       \n        setClicked(item)\n        setIsClicked(!isClicked)\n    }\n\n    const toggleCancel= ()=>{\n        setIsClicked(false)\n    }\n\n  \n    const [savingsColor,setSavingsColor] = useState(\"\")\n    console.log(savingsColor)\n  return(\n        <>\n                 \n                {/* {(editList)?(<EditPerson item={editID} editHandler={editHandler}/>):null}  */}\n            \n            {isOpen && <Popup\n                    content={<>\n                        <b id='logout-message'>{constants.LIST_PAGE.LIST_PAGE_DELETE_MESSAGE} <span style={{color:'red'}}>{name}</span> ? </b>\n                        <div className='logout-buttons'>\n                    <button className='button-logout' id='red' onClick={()=>{deleteHandler(deleteId)}}>{constants.LIST_PAGE.LIST_PAGE_DELETE_MESSAGE_OK}</button>\n                    <button onClick={togglePopup} className='button-logout'>{constants.LIST_PAGE.LIST_PAGE_DELETE_MESSAGE_CANCEL}</button>\n                        </div>\n                        \n                        </>}\n                        handleClose={togglePopup}\n            />}\n            {isClicked && <PopupList\n                    content={<>\n                    <div className=\"clickedData\">\n                        <h3 id='logout-message'><span className='clickedHeading'>{clicked.name}</span> </h3>\n                        <p id='logout-message'>ID <span className=\"clickedItems\">{clicked.id}</span> </p><hr/>\n                        <p id='logout-message'>Gender <span className=\"clickedItems\">{clicked.gender}</span> </p><hr/>\n                        <p id='logout-message'>Priority <span className=\"clickedItems\">{clicked.priority}</span> </p><hr/>\n                        <p id='logout-message'>Savings <span className=\"clickedItems\">{clicked.savings}</span> </p><hr/>\n                        <p id='logout-message'>RD <span className=\"clickedItems\">{clicked.rd}</span> </p><hr/>\n                        </div>    \n                        <div className='logout-buttons'>\n                                <button onClick={toggleCancel} className='button-logout' id='red'>{constants.LIST_PAGE.LIST_PAGE_DELETE_MESSAGE_CANCEL}</button>\n                        </div>\n                        \n                        </>}\n                        handleClose={togglePopup}\n            />}\n            {(editList)?(<CreatePerson item={editID} editHandler={editHandler}/>):(\n            <div className=\"Table\">\n                <div className='listHeader'>\n                    <div className='listHeader-left'>\n                        <p>{constants.LIST_PAGE.LIST_PAGE_HEADING}</p>\n                    </div>\n                    <div className='listHeader'><input type='text' placeholder=\"&#xF002; Search for Name and Priority\" className='fontAwesome' onChange ={e=>setSearch(e.target.value)}/>\n                    </div> \n                </div>\n                <div className='listTable'>\n                \n                    <table>\n                        <thead>\n                            <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_1} </th>\n                            <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_2} </th>\n                            <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_3} </th>\n                            <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_4} </th>\n                            <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_5} </th>\n                            <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_6} </th>\n                            <th>{constants.TABLE_HEADING.LIST_TABLE_HEADING_7} </th>\n                            <th></th>\n                            <th></th>\n                        </thead>    \n                        \n                        <tbody className='listTableData'> \n                                {searchResult.map(item=>(\n\n                                            <tr key={item.id} >\n                                                <td id='slno' onClick={()=>clickHandler(item)}>{i++}</td>\n                                                <td ids='names' onClick={()=>clickHandler(item)}>{item.name}</td>\n                                                <td id='id' onClick={()=>clickHandler(item)}>{item.id}</td>\n                                                <td id='gender' onClick={()=>clickHandler(item)}>{item.gender}</td>\n                                                <td id='priority' onClick={()=>clickHandler(item)}>{item.priority}</td>\n                                                <td onClick={()=>clickHandler(item)} style={{color:(item.savings=='Yes')?('red'):(null)}}>{item.savings}</td>\n                                                <td id='rd' onClick={()=>clickHandler(item)} style={{color:(item.rd=='Yes')?('red'):(null)}}>{item.rd}</td>\n                                                <td id='edit'> <button  className='listGreen' onClick={()=>{editHandler(item)}} >{constants.TABLE_HEADING.LIST_TABLE_HEADING_8}</button></td>\n                                                <td id='delete'><button className=\"listRed\" onClick={()=>togglePopup(item.id,item.name)} >{constants.TABLE_HEADING.LIST_TABLE_HEADING_9}</button></td>\n            \n                                            </tr>\n                                       \n                                       \n                                     \n                                    ))}\n                                \n                            </tbody>\n                            \n                        \n                    </table>\n                    </div> \n   \n                    \n                \n                </div>\n                \n                )}\n        </>\n    )\n}\n\nconst mapStatetoProps = ({task1})=>{\n    return {personList:task1.personList}\n}\n\nconst mapDispatchtoProps = (dispatch)=>{\n    return { deletePerson : (id)=>{dispatch(deletePerson(id))}}\n}\n\nexport default connect(mapStatetoProps,mapDispatchtoProps)(ListMenu)\n","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/CreateMenu.js",["113","114","115","116","117","118","119"],"import React,{useState,Fragment, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport '../../assets/styles/CreateMenu.css'\nimport {connect} from 'react-redux';\nimport Popup from '../common/Popup'\nimport * as constants from '../../utilities/Constants'\nimport {addPerson,updatePerson} from '../../state/Actions'\n\n\n\nconst CreateMenu= (props)=> {\n    \n    \n    //Popup Message\n    let content = \"\"\n    const [formError,setFormError]=useState(\"\")\n    const [idError,setIDError]=useState(\"\")\n    const [isOpen,setIsOpen]=useState(false)\n    const togglePopup = ()=>{\n        setIsOpen(!isOpen)\n    }\n\n    //popup for success message\n    const [isSuccess,setIsSuccess]=useState(false)\n    const toggleSuccess = ()=>{\n        setIsSuccess(!isSuccess)\n    }\n   \n    let [initialSavings,setInitialSavings] = useState(false)\n    let [initialRd,setInitialRd] = useState(false)\n    const [name,setName]=useState(\"\")\n    const [id,setId]=useState(\"\")\n    const [gender, setGender]= useState(\"\")\n    const [priority,setPriority] = useState(\"0\")\n    let [savings,setSavings] = useState(\"No\")\n    let [rd,setRd] = useState(\"No\")\n\n    const rdHandler = ()=>{\n        setInitialRd(initialRd=!initialRd)\n        initialRd?setRd(\"Yes\"):setRd(\"No\")\n        console.log(\"rddd\",rd)\n    }\n    const savingsHandler = ()=>{\n        setInitialSavings(initialSavings=!initialSavings)\n        initialSavings?setSavings(\"Yes\"):setSavings(\"No\")\n        console.log(\"save\",initialSavings)\n    }\n    //Edit Section\n    const [isEdit,setIsEdit]= useState(false)\n\n    \n    \n    \n    useEffect(()=>{\n        (props.item===undefined)?(console.log('test test')):edittest()\n    },[props.item])\n    \n\n    let duplicate_id=0;\n   \n \n    const submitHandler =(error)=>{\n\n        idChecker(id)\n        if(name===\"\" || id===\"\" || gender===\"\" || priority==='0'){\n       \n           setFormError(\"Enter All Fields\");\n           togglePopup()\n       }\n       \n       else if(duplicate_id === 0){\n\n                let data={name,id,gender,priority,savings,rd}\n                isEdit?props.updatePerson(data):props.addPerson(data)\n                \n                clearfield()\n                setFormError(\"\")\n                setIDError(\"\")\n                toggleSuccess()\n       \n        }\n     }\n     const updateHandler =(error)=>{\n\n        if(name===\"\" || id===\"\" || gender===\"\" || priority==='0'){\n       \n           setFormError(\"Enter All Fields\");\n           togglePopup()\n       }\n       else{\n\n                let data={name,id,gender,priority,savings,rd}\n                props.updatePerson(data)\n                props.editHandler()\n       \n        }\n     }    \n\n    const idChecker = (c_id)=>{\n        props.personList.forEach(person=>{\n            if(person.id === c_id){\n                duplicate_id=1;\n                setIDError(\"ID Already Taken\")\n                togglePopup()\n                \n            }\n      })\n\n    }\n\n    const clearfield = ()=>{\n        setName(\"\")\n        setId(\"\")\n        setGender(\"\")\n        setPriority(\"\")\n        setSavings(\"\")\n        setRd(\"\")\n    }\n\nconst edittest = ()=>{\n    setIsEdit(true)\n    setName(props.item.name)\n    setId(props.item.id)\n    setGender(props.item.gender)\n    setPriority(props.item.priority)\n    setSavings(props.item.savings)\n    setRd(props.item.rd)\n}\n\n\nconsole.log(name)\n\n    return (\n        <>\n        {isOpen && <Popup\n                    content={<>\n                        <b id='logout-message'><li style={{fontSize:'12px', color:'red'}}>{idError}</li><li style={{fontSize:'12px'}}>{formError}</li></b> \n                         \n                        <div className='logout-buttons' onHover={togglePopup}>\n                    <button onClick={togglePopup} className='button-logout' id='red' style={{fontSize:'10px', width:'70px',height:'25px'}}>{constants.CREATE_PAGE.ADD_PERSON_ERROR_BUTTON}</button>\n                        </div>\n                        \n                        </>}\n                        handleClose={togglePopup}\n                />}\n        {isSuccess && <Popup\n                    content={<>\n                        <b id='logout-message'>{constants.CREATE_PAGE.ADD_PERSON_SUCCESS_MESSAGE}</b> \n                         \n                        <div className='logout-buttons'>\n                            <button onClick={toggleSuccess} className='button-logout'>Done</button>\n                        </div>\n                        \n                        </>}\n                        handleClose={togglePopup}\n                />}        \n        <div className='create'>\n            <div className='createContent'>\n                    {isEdit?(<p className='p'>Edit Person</p>):(<p className='p'>{constants.CREATE_PAGE.ADD_PERSON_HEADING}</p>)}\n                \n                    <div className='create-fields'>\n                    <input type='text' placeholder='Name' required id='name' value={name} onChange={(e)=>setName(e.target.value)}></input>\n                    {isEdit?(<input type='number' placeholder='ID' required min='1' id='id' value={id}></input>):(<input type='number' placeholder='ID' required min='1' id='id' value={id} onChange={(e)=>setId(e.target.value)}></input>)}\n                    <br/>\n\n                    <label className='gender'>{constants.CREATE_PAGE.ADD_PERSON_GENDER} </label>\n                    {(gender==='Male')?(<label className='radio_label'><input type='radio' name='gender' className='check' id='male' value='Male' checked onChange={e=>setGender('Male')} ></input>Male<span></span></label>):(<label className='radio_label'><input type='radio' name='gender' className='check' id='male' value='Male' onChange={e=>setGender('Male')} ></input>Male<span></span></label>)}\n                    <br></br>\n                    {(gender==='Female')?(<label className='radio_label radio2'><input type='radio' name='gender' checked className='check' id='female' value='Female' onChange={e=>setGender('Female')}></input>Female<span></span></label>):(<label className='radio_label radio2'><input type='radio' name='gender' className='check' id='female' value='Female' onChange={e=>setGender('Female')}></input>Female<span></span></label>)}\n                    \n                    <br/>\n                    <div className='select'>\n                        <select name='priority' id='select' onChange={e=>setPriority(e.target.value)} value={priority}>\n                            <option default value= '0'>Priority</option>\n                            <option value='Basic'>Basic</option>\n                            <option value='Advanced'>Advanced</option>\n                        </select>   \n                     </div>\n                     <div className='checkbox'>\n                        {(savings=='Yes')?(<> <input type=\"checkbox\" id=\"savings\"name=\"savings\" value=\"savings\" checked onChange={()=>setSavings(\"No\")}/> <label for=\"savings\">Savings</label></> ):(<><input type=\"checkbox\" id=\"savings\"    name=\"savings\" value=\"savings\" onChange={()=>setSavings(\"Yes\")} /><label for=\"savings\">Savings</label></>)}\n                    \n                    \n                        {(rd=='Yes')?(<><input type=\"checkbox\" id=\"rd\" name=\"rd\" value=\"rd\" checked onChange={()=>setRd('No')}/><label for=\"rd\"  >RD</label></>):(<><input type=\"checkbox\" id=\"rd\" name=\"rd\" value=\"rd\" onChange={()=>setRd('Yes')}/><label for=\"rd\" >RD</label></>)}\n                    </div>\n                \n                    {isEdit?(<div className='edit-buttons'>\n                                    <button type='submit' className='buttons' onClick={updateHandler}>Update</button>\n                                    <Link to='/list'><button type='submit' className='buttons' style={{backgroundColor: \"red\"}} onClick={props.editHandler}>Cancel</button></Link>\n                             </div>):\n                            (<button type='submit' className='buttons' onClick={submitHandler}>{constants.CREATE_PAGE.ADD_PERSON_SUBMIT_BUTTON}</button>)}\n                </div>\n                \n                \n            </div>\n            \n        </div>\n        </>\n    )\n}\n\n\nconst mapStatetoProps = ({task1})=>{\n    return {personList:task1.personList}\n}\n\nconst mapDispatchtoProps = (dispatch)=>{\n    return { addPerson : (data)=>{dispatch(addPerson(data))},\n            updatePerson : (data)=>{dispatch(updatePerson(data))}}\n    return { }\n}\n\nexport default connect(mapStatetoProps,mapDispatchtoProps)(CreateMenu)\n\n","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/HomePageMenu.js",["120","121","122","123"],"import React,{useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport '../../assets/styles/HomePageMenu.css'\nimport * as constants from '../../utilities/Constants'\n\nfunction HomePageMenu() {\n    const [active,setActive] =useState(1)\n    const activeHandler = (index)=>{\n        setActive(index)\n    }\n    return (\n        <div className='homePageMenu'>\n        \n            <div className={(active==1)?'menuItem active':'menuItem'} onClick={()=>{setActive(1)}}><Link to='/add'>{constants.MENU_HEADING.MENU_HEADING_1}</Link></div>\n            <div className={(active==2)?'menuItem active':'menuItem'} onClick={()=>{setActive(2)}}><Link to='/list'>{constants.MENU_HEADING.MENU_HEADING_2}</Link></div>\n            <div className={(active==3)?'menuItem active':'menuItem'} onClick={()=>{setActive(3)}}><Link to='/product'>{constants.MENU_HEADING.MENU_HEADING_3}</Link></div>    \n            \n        </div>\n    )\n}\n\nexport default HomePageMenu\n","/Users/rojithreji/Documents/msil/miniproject/src/components/postlogin/Product.js",["124","125","126","127","128","129"],"import React, { useEffect, useState } from 'react'\nimport '../../assets/styles/Product.css';\nimport axios from 'axios';\nimport Input from '../common/Input';\nimport PopupProduct from '../common/PopupProduct';\nimport Spinner from '../common/Spinner'\n\n\nconst Product = () => {\n\n    \n    const [product,setProduct]=  useState(null)\n    const [loaded,setLoaded] = useState(false)\n    const [search,setSearch]= useState(\"\")\n    const [searchResult,setSearchResult]= useState([])\n    const [description,setDescription]= useState(false)\n    const [priceOption,setPriceOption] = useState(\"\")\n    const [currentProduct,setCurrentProduct] = useState(\"\")\n    const [isProduct,setIsProduct] = useState(false)\n    const [count,setCount] = useState(1)\n\n        useEffect(() => {\n            const apiUrl = \"https://hplussport.com/api/products/order/price/sorc/qty/100\"\n             fetch(apiUrl)\n          \n              .then(res =>{ return res.json()})\n              .then(data => {\n                setProduct(data)\n                  console.log(\"d\",data.name)\n                  let name = data.forEach(data=>{return data.name})\n                  console.log(\"huhu\",name)\n                setSearchResult(data.filter(itm=>(itm.name.toLowerCase().includes(search.toLowerCase()))||(itm.price.includes(search))))\n               \n                setLoaded(true)\n                \n                \n              })\n          },[search,setSearchResult,setPriceOption]);\n                \n       \n    \n    console.log(\"kikikii\",searchResult)\n    console.log(\"pr\",product)\n    console.log(search)\n    const toggleDescription = (id)=>{\n        setDescription(!description)\n        console.log(id)\n    }\n    const sortPrice = (value) =>{\n        if (value ==='lowtoHigh'){\n            setPriceOption('lowtoHigh')\n            console.log(\"here low\")\n            const lth = searchResult.reverse();\n            setSearchResult(lth);\n            console.log(\"dshjdbs\",lth)\n            setCount(2)\n        }\n        if(value ==='hightoLow'){\n            if(count==1){\n                setSearchResult(searchResult)\n            }\n            else if(count==2){\n                setPriceOption('hightoLow')\n                console.log(\"here high\")\n                setSearchResult(searchResult.reverse());\n\n            }\n        }  \n\n    }\n    const currentProductHandler=(item)=>{\n        setCurrentProduct(item)\n        setIsProduct(true)\n    }\n    const toggleProduct = ()=>{\n        setIsProduct(false)\n    }\n    console.log(priceOption)\n    return(\n    <>\n    {isProduct?(<PopupProduct content={<> <h3 className='productPopupHeading'>{currentProduct.name} - ${currentProduct.price} </h3>\n                                    <img src={currentProduct.image} alt={currentProduct.image_title} className='productPopupImage'/>\n                                    <p className='productPopupDescription'>{currentProduct.description}</p>\n                                    <p className=\"price\"></p><div className='logout-buttons'>\n                                         <button onClick={toggleProduct} className='buttonProductCancel' id='red'>Cancel</button>\n                        </div> </>}/>):null}\n    <div className=\"productHeader\">\n        <div className='productHeader-left'>\n            <input type=\"text\" placeholder=\" &#xF002; Search for Name and Price\" className=\"productSearch fontAwesome\" value={search} onChange={(e)=>setSearch(e.target.value)}/>\n        </div>\n        <div className='productHeader-right'>\n                            <select name='filter' className='productSelect' onChange={(e)=>sortPrice(e.target.value)}>\n                                <option>Filter</option>\n                                <option value='lowtoHigh'>Low to High</option>\n                                <option value='hightoLow'>High to Low</option>\n                            </select>   \n        </div>\n        \n    </div>\n    <div className=\"product\">\n        {loaded?(\n            searchResult.map(item=>\n            <div className=\"card\" key={item.id}>\n                <img src={item.image} alt={item.image_title} style={{width:\"90%\"}}/>\n                <h3>{item.name}</h3>\n                <p className=\"price\">${item.price}</p>\n                <p><button onClick={()=>currentProductHandler(item)}> Show Details</button></p>  \n            </div>\n            )\n        ):<Spinner/>\n        }\n        {searchResult==\"\" && loaded?(<p className=\"productNotFound\">OOOOPS Item not Found !!!!</p>):null}\n    </div>\n    </>\n    \n)\n       \n}\n\nexport default Product\n\n\n","/Users/rojithreji/Documents/msil/miniproject/src/components/prelogin/Login.js",["130","131","132","133","134","135","136","137"],"/Users/rojithreji/Documents/msil/miniproject/src/state/Actions.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/components/common/PopupProduct.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/components/common/Popup.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/components/common/PopupList.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/components/common/Spinner.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/components/common/PopupLogin.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/components/common/Input.js",[],"/Users/rojithreji/Documents/msil/miniproject/src/utilities/CommonMethods.js",[],["138","139"],"/Users/rojithreji/Documents/msil/miniproject/src/utilities/Constants.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":14,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":9},{"ruleId":"144","severity":1,"message":"148","line":85,"column":11,"nodeType":"146","messageId":"147","endLine":85,"endColumn":23},{"ruleId":"144","severity":1,"message":"149","line":95,"column":11,"nodeType":"146","messageId":"147","endLine":95,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":25,"column":47,"nodeType":"152","endLine":25,"endColumn":63},{"ruleId":"153","severity":1,"message":"154","line":37,"column":29,"nodeType":"152","endLine":37,"endColumn":63},{"ruleId":"144","severity":1,"message":"155","line":1,"column":26,"nodeType":"146","messageId":"147","endLine":1,"endColumn":37},{"ruleId":"144","severity":1,"message":"156","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"157","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"158","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":20},{"ruleId":"144","severity":1,"message":"159","line":9,"column":13,"nodeType":"146","messageId":"147","endLine":9,"endColumn":20},{"ruleId":"144","severity":1,"message":"160","line":11,"column":9,"nodeType":"146","messageId":"147","endLine":11,"endColumn":18},{"ruleId":"144","severity":1,"message":"161","line":17,"column":11,"nodeType":"146","messageId":"147","endLine":17,"endColumn":19},{"ruleId":"144","severity":1,"message":"162","line":18,"column":17,"nodeType":"146","messageId":"147","endLine":18,"endColumn":24},{"ruleId":"144","severity":1,"message":"163","line":80,"column":25,"nodeType":"146","messageId":"147","endLine":80,"endColumn":40},{"ruleId":"164","severity":1,"message":"165","line":148,"column":113,"nodeType":"166","messageId":"167","endLine":148,"endColumn":115},{"ruleId":"164","severity":1,"message":"165","line":149,"column":116,"nodeType":"166","messageId":"167","endLine":149,"endColumn":118},{"ruleId":"144","severity":1,"message":"168","line":15,"column":9,"nodeType":"146","messageId":"147","endLine":15,"endColumn":16},{"ruleId":"144","severity":1,"message":"169","line":38,"column":11,"nodeType":"146","messageId":"147","endLine":38,"endColumn":20},{"ruleId":"144","severity":1,"message":"170","line":43,"column":11,"nodeType":"146","messageId":"147","endLine":43,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":56,"column":7,"nodeType":"173","endLine":56,"endColumn":19,"suggestions":"174"},{"ruleId":"164","severity":1,"message":"165","line":180,"column":34,"nodeType":"166","messageId":"167","endLine":180,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":183,"column":29,"nodeType":"166","messageId":"167","endLine":183,"endColumn":31},{"ruleId":"175","severity":1,"message":"176","line":209,"column":5,"nodeType":"177","messageId":"178","endLine":209,"endColumn":15},{"ruleId":"144","severity":1,"message":"179","line":8,"column":11,"nodeType":"146","messageId":"147","endLine":8,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":14,"column":36,"nodeType":"166","messageId":"167","endLine":14,"endColumn":38},{"ruleId":"164","severity":1,"message":"165","line":15,"column":36,"nodeType":"166","messageId":"167","endLine":15,"endColumn":38},{"ruleId":"164","severity":1,"message":"165","line":16,"column":36,"nodeType":"166","messageId":"167","endLine":16,"endColumn":38},{"ruleId":"144","severity":1,"message":"180","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"157","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":13},{"ruleId":"144","severity":1,"message":"181","line":45,"column":11,"nodeType":"146","messageId":"147","endLine":45,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":59,"column":21,"nodeType":"166","messageId":"167","endLine":59,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":62,"column":26,"nodeType":"166","messageId":"167","endLine":62,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":112,"column":22,"nodeType":"166","messageId":"167","endLine":112,"endColumn":24},{"ruleId":"144","severity":1,"message":"158","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":20},{"ruleId":"144","severity":1,"message":"156","line":3,"column":9,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"182","line":3,"column":14,"nodeType":"146","messageId":"147","endLine":3,"endColumn":19},{"ruleId":"144","severity":1,"message":"183","line":3,"column":20,"nodeType":"146","messageId":"147","endLine":3,"endColumn":28},{"ruleId":"144","severity":1,"message":"184","line":3,"column":57,"nodeType":"146","messageId":"147","endLine":3,"endColumn":63},{"ruleId":"144","severity":1,"message":"185","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":36,"column":60,"nodeType":"166","messageId":"167","endLine":36,"endColumn":62},{"ruleId":"144","severity":1,"message":"186","line":53,"column":11,"nodeType":"146","messageId":"147","endLine":53,"endColumn":17},{"ruleId":"140","replacedBy":"187"},{"ruleId":"142","replacedBy":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'slno' is assigned a value but never used.","Identifier","unusedVar","'successPopup' is assigned a value but never used.","'clear' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useCallback' is defined but never used.","'Link' is defined but never used.","'Input' is defined but never used.","'useSelector' is defined but never used.","'actions' is defined but never used.","'addPerson' is defined but never used.","'dispatch' is assigned a value but never used.","'setData' is assigned a value but never used.","'setSavingsColor' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'content' is assigned a value but never used.","'rdHandler' is assigned a value but never used.","'savingsHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'edittest'. Either include it or remove the dependency array.","ArrayExpression",["191"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'activeHandler' is assigned a value but never used.","'axios' is defined but never used.","'toggleDescription' is assigned a value but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Router' is defined but never used.","'clearTextField' is defined but never used.","'logout' is assigned a value but never used.",["189"],["190"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},"Update the dependencies array to be: [edittest, props.item]",{"range":"194","text":"195"},[1656,1668],"[edittest, props.item]"]